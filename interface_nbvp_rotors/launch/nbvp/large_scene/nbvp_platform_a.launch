<launch>

  <arg name="method" value="nbvp"/>
  <arg name="scene" value="platform_a"/>

  <arg name="quad_name" value="hummingbird"/>
  <arg name="mav_name" value="$(arg quad_name)"/>
  <arg name="uav_gt_odom_topic" value="$(arg mav_name)/ground_truth/odometry"/>
  <arg name="uav_noisy_odom" default="/camera/noisy_odom"/>

  <arg name="max_range" default="7."/>
  <arg name="voxel_size" default="0.1"/>
  <arg name="traj_topic" value="$(arg mav_name)/autopilot/reference_state" />

  <arg name="cloud_topic" value="/camera/cloud"/>
  <arg name="save_mesh_folder" value="$(find flybo_utils)/resources/flybo_eval/$(arg method)/$(arg scene)/mesh" />
  <arg name="save_vol_folder" value="$(find flybo_utils)/resources/flybo_eval/$(arg method)/$(arg scene)/vol" />
  <arg name="save_log_folder" value="$(find flybo_utils)/resources/flybo_eval/$(arg method)/$(arg scene)/log" />

  <include file="$(find flybo_utils)/resources/launch/utils_launch/$(arg scene)_soa.launch">
    <arg name="max_range" value="$(arg max_range)" />
    <arg name="save_mesh_folder" value="$(arg save_mesh_folder)" />
    <arg name="save_vol_folder" value="$(arg save_vol_folder)" />
  </include>

  <!-- Logging bench -->


  <!-- NBVP arguments -->
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />
  <arg name="param_file" default="$(find interface_nbvp_rotors)/resource/$(arg scene).yaml" />
  <arg name="tf_frame" default="world" />
  <arg name="stl_file_path" default="" />
  <arg name="mesh_resolution" default="1.0" />
  <arg name="visualize_max_z" default="999" />

  <node pkg="tf2_ros" type="static_transform_publisher" name="tf_base_to_cam" args="0 0 0.0 0 0 0 world tf_wc"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_world" args="0.00 0 0.0 0 0 0 world map" />

  <include file="$(find interface_nbvp_rotors)/launch/octomap_launch/octomap_server.launch">
    <arg name="cloud_topic" value="$(arg cloud_topic)" />
    <arg name="max_range" value="$(arg max_range)" />
    <arg name="voxel_size" value="$(arg voxel_size)" />
  </include>
  <group ns="planner">

    <node name="nbvPlanner" pkg="nbvplanner" type="nbvPlanner" output="screen">
      <param name="tf_frame" type="string" value="$(arg tf_frame)" />
      <param name="resolution" type="double" value="$(arg voxel_size)" />
      <param name="visualize_max_z" type="double" value="$(arg visualize_max_z)" />
      <param name="sensor_max_range" type="double" value="$(arg max_range)" />
      <param name="stl_file_path" type="string" value="$(arg stl_file_path)" />
      <param name="mesh_resolution" type="double" value="$(arg mesh_resolution)" />
      <param name="map_publish_frequency" type="double" value="1.0" />
      <remap from="pointcloud_throttled" to="/pointcloudOut"/>
      <remap from="pointcloud" to="$(arg cloud_topic)"/>
      <remap from="pose" to="/$(arg mav_name)/ground_truth/pose_with_covariance"/>
      <remap from="nbvplanner" to="/nbvplanner"/>
      <rosparam command="load" file="$(arg param_file)" />
      <remap from="odometry" to="/$(arg uav_noisy_odom)" />
      <remap from="octomap_full" to="/octomap_full" />

    </node>
    <node name="exploration" pkg="interface_nbvp_rotors" type="exploration" output="screen" >
      <rosparam command="load" file="$(arg param_file)" />
      <remap from="odometry" to="/$(arg uav_noisy_odom)" />
      <remap from="command/trajectory" to="/$(arg traj_topic)" />
      <param name="planner/save_log_folder" value="$(arg save_log_folder)" />

    </node>

  </group>

</launch>
